library(rpart)
library(caret)
library(pROC)
library(ROCR)
library(ggplot2)
library(rpart.plot)
#Import and clean data
setwd("~/Desktop/personal_git/dataSci450/assignment1")
wineData <- as.data.frame(read.csv("RedWhiteWine.csv"))
wineDataClean <- na.omit(wineData)
indexes = sample(1:nrow(wineDataClean), size=0.2*nrow(wineDataClean))
wineTest <- wineDataClean[indexes,]
wineTrain <- wineDataClean[-indexes,]
#Create the formula for our model
wineDataColumns <- colnames(wineDataClean)
wineDataColumns <- as.vector(wineDataColumns[-(13)])
fit_formula <- paste(wineDataColumns,collapse = " + ")
fit_formula <- paste("Class ~ ", fit_formula)
#Create the fit model
wine_fit <- rpart(fit_formula, method = "class", data=wineTrain)
predictions <- predict(wine_fit, wineTest[, colnames(wineDataClean)], type="class")
head(predictions)
#printcp(wine_fit)
confusionTest <- table(predictions, wineTest$Class)
confusionMatrix(confusionTest)
#AUC of sub categories
sub_categories <- c("alcohol", "residual.sugar", "pH", "chlorides", "citric.acid")
sub_fit <- paste(sub_categories, collapse = " + ")
sub_fit_formula <- paste("Class ~ ", sub_fit)
wine_sub_fit <- rpart(sub_fit_formula, method = "class", data=wineTrain)
sub_predictions <- predict(wine_sub_fit, wineTest[, colnames(wineDataClean)], type="class")
subConfusionTest <- table(sub_predictions, wineTest$Class)
confusionMatrix(subConfusionTest)
sub_predict_obj <- prediction(c(sub_predictions), wineTest$Class)
auc <- performance(sub_predict_obj, 'auc')
#Visualize decision tree
rpart.plot(wine_sub_fit)
#Finding best AUC
wine_matrix <- model.matrix(Class ~ ., data = wineDataClean)
pca_wine <- prcomp(wine_matrix)
summary(pca_wine)
expanded_wineData <- merge(wineDataClean, pca_wine$x)
expanded_wineData <- na.omit(expanded_wineData)
pca_wine$x
pca_wine$x[1:8]
pca_wine$x[1:8,]
pca_wine$x[,1:8]
library(rpart)
library(caret)
library(pROC)
library(ROCR)
library(ggplot2)
library(rpart.plot)
#Import and clean data
setwd("~/Desktop/personal_git/dataSci450/assignment1")
wineData <- as.data.frame(read.csv("RedWhiteWine.csv"))
wineDataClean <- na.omit(wineData)
indexes = sample(1:nrow(wineDataClean), size=0.2*nrow(wineDataClean))
wineTest <- wineDataClean[indexes,]
wineTrain <- wineDataClean[-indexes,]
#Create the formula for our model
wineDataColumns <- colnames(wineDataClean)
wineDataColumns <- as.vector(wineDataColumns[-(13)])
fit_formula <- paste(wineDataColumns,collapse = " + ")
fit_formula <- paste("Class ~ ", fit_formula)
#Create the fit model
wine_fit <- rpart(fit_formula, method = "class", data=wineTrain)
predictions <- predict(wine_fit, wineTest[, colnames(wineDataClean)], type="class")
head(predictions)
#printcp(wine_fit)
confusionTest <- table(predictions, wineTest$Class)
confusionMatrix(confusionTest)
#AUC of sub categories
sub_categories <- c("alcohol", "residual.sugar", "pH", "chlorides", "citric.acid")
sub_fit <- paste(sub_categories, collapse = " + ")
sub_fit_formula <- paste("Class ~ ", sub_fit)
wine_sub_fit <- rpart(sub_fit_formula, method = "class", data=wineTrain)
sub_predictions <- predict(wine_sub_fit, wineTest[, colnames(wineDataClean)], type="class")
subConfusionTest <- table(sub_predictions, wineTest$Class)
confusionMatrix(subConfusionTest)
sub_predict_obj <- prediction(c(sub_predictions), wineTest$Class)
auc <- performance(sub_predict_obj, 'auc')
#Visualize decision tree
rpart.plot(wine_sub_fit)
#Finding best AUC
wine_matrix <- model.matrix(Class ~ ., data = wineDataClean)
pca_wine <- prcomp(wine_matrix)
summary(pca_wine)
expanded_wineData <- rbind(expanded_wineData, pca_win$x[,1:8])
wineDataColumns <- colnames(expanded_wineData)
wineDataColumns <- as.vector(expanded_wineData[-c(13)])
fit_formula <- paste(wineDataColumns,collapse = " + ")
fit_formula <- paste("Class ~ ", fit_formula)
wine_pc_fit <- rpart(fit_formula, method = "class", data=expanded_wineData)
library(rpart)
library(caret)
library(pROC)
library(ROCR)
library(ggplot2)
library(rpart.plot)
#Import and clean data
setwd("~/Desktop/personal_git/dataSci450/assignment1")
wineData <- as.data.frame(read.csv("RedWhiteWine.csv"))
wineDataClean <- na.omit(wineData)
indexes = sample(1:nrow(wineDataClean), size=0.2*nrow(wineDataClean))
wineTest <- wineDataClean[indexes,]
wineTrain <- wineDataClean[-indexes,]
#Create the formula for our model
wineDataColumns <- colnames(wineDataClean)
wineDataColumns <- as.vector(wineDataColumns[-(13)])
fit_formula <- paste(wineDataColumns,collapse = " + ")
fit_formula <- paste("Class ~ ", fit_formula)
#Create the fit model
wine_fit <- rpart(fit_formula, method = "class", data=wineTrain)
predictions <- predict(wine_fit, wineTest[, colnames(wineDataClean)], type="class")
head(predictions)
#printcp(wine_fit)
confusionTest <- table(predictions, wineTest$Class)
confusionMatrix(confusionTest)
#AUC of sub categories
sub_categories <- c("alcohol", "residual.sugar", "pH", "chlorides", "citric.acid")
sub_fit <- paste(sub_categories, collapse = " + ")
sub_fit_formula <- paste("Class ~ ", sub_fit)
wine_sub_fit <- rpart(sub_fit_formula, method = "class", data=wineTrain)
sub_predictions <- predict(wine_sub_fit, wineTest[, colnames(wineDataClean)], type="class")
subConfusionTest <- table(sub_predictions, wineTest$Class)
confusionMatrix(subConfusionTest)
sub_predict_obj <- prediction(c(sub_predictions), wineTest$Class)
auc <- performance(sub_predict_obj, 'auc')
#Visualize decision tree
rpart.plot(wine_sub_fit)
#Finding best AUC
wine_matrix <- model.matrix(Class ~ ., data = wineDataClean)
pca_wine <- prcomp(wine_matrix)
summary(pca_wine)
expanded_wineData <- rbind(expanded_wineData, pca_wine$x[,1:8])
expanded_wineData <- rbind(wineDataClean, pca_wine$x[,1:8])
expanded_wineData <- wineDataClean
expanded_wineData$pc1 <- pca_wine$x[,1]
expanded_wineData$pc2 <- pca_wine$x[,2]
expanded_wineData$pc3 <- pca_wine$x[,3]
expanded_wineData$pc4 <- pca_wine$x[,4]
expanded_wineData$pc5 <- pca_wine$x[,5]
expanded_wineData$pc6 <- pca_wine$x[,6]
expanded_wineData$pc7 <- pca_wine$x[,7]
wineDataColumns <- colnames(expanded_wineData)
wineDataColumns <- as.vector(expanded_wineData[-c(13)])
fit_formula <- paste(wineDataColumns,collapse = " + ")
fit_formula <- paste("Class ~ ", fit_formula)
wine_pc_fit <- rpart(fit_formula, method = "class", data=expanded_wineData)
expanded_wineData <- na.omit(expanded_wineData)
wineDataColumns <- colnames(expanded_wineData)
wineDataColumns <- as.vector(expanded_wineData[-c(13)])
fit_formula <- paste(wineDataColumns,collapse = " + ")
fit_formula <- paste("Class ~ ", fit_formula)
wine_pc_fit <- rpart(fit_formula, method = "class", data=expanded_wineData)
wineDataColumns <- colnames(expanded_wineData)
fit_formula <- paste(wineDataColumns,collapse = " + ")
fit_formula <- paste("Class ~ ", fit_formula)
wine_pc_fit <- rpart(fit_formula, method = "class", data=expanded_wineData)
wineDataColumns <- as.vector(wineDataColumns[-(13)])
fit_formula <- paste(wineDataColumns,collapse = " + ")
fit_formula <- paste("Class ~ ", fit_formula)
wine_pc_fit <- rpart(fit_formula, method = "class", data=expanded_wineData)
wine_pc_fit <- rpart(fit_formula, method = "class", data=expandedWineTrain)
expandedPredictions <- predict(wine_fit, wineTest[, colnames(wineDataClean)], type="class")
confusionTest <- table(expandedPredictions, expandedWineTest$Class)
confusionMatrix(confusionTest)
wine_pc_fit <- rpart(fit_formula, method = "class", data=expandedWineTrain)
indexes = sample(1:nrow(expanded_wineData), size=0.2*nrow(expanded_wineData))
expandedWineTest <- expanded_wineData[indexes,]
expandedWineTrain <- expanded_wineData[-indexes,]
wineDataColumns <- colnames(expanded_wineData)
wineDataColumns <- as.vector(wineDataColumns[-(13)])
fit_formula <- paste(wineDataColumns,collapse = " + ")
fit_formula <- paste("Class ~ ", fit_formula)
wine_pc_fit <- rpart(fit_formula, method = "class", data=expandedWineTrain)
expandedPredictions <- predict(wine_fit, wineTest[, colnames(wineDataClean)], type="class")
confusionTest <- table(expandedPredictions, expandedWineTest$Class)
confusionMatrix(confusionTest)
wineDataColumns <- as.vector(wineDataColumns[-seq(1:13)])
fit_formula <- paste(wineDataColumns,collapse = " + ")
fit_formula <- paste("Class ~ ", fit_formula)
wine_pc_fit <- rpart(fit_formula, method = "class", data=expandedWineTrain)
expandedPredictions <- predict(wine_fit, wineTest[, colnames(wineDataClean)], type="class")
confusionTest <- table(expandedPredictions, expandedWineTest$Class)
confusionMatrix(confusionTest)
view(expandedWineData)
View(expandedWineData)
View(expanded_wineData)
wine_matrix <- model.matrix(Class ~ ., data = wineDataClean)
pca_wine <- prcomp(wine_matrix)
pca_data <- pca_wine$x[,1:8]
pca_data$Class <- wineDataClean$Class
indexes = sample(1:nrow(pca_data), size=0.2*nrow(pca_data))
expandedWineTest <- pca_data[indexes,]
expandedWineTrain <- pca_data[-indexes,]
wineDataColumns <- colnames(pca_data)
wineDataColumns <- as.vector(wineDataColumns[-(13)])
fit_formula <- paste(wineDataColumns,collapse = " + ")
fit_formula <- paste("Class ~ ", fit_formula)
pca_data <- pca_wine$x[,1:8]
pca_data$Class <- wineDataClean$Class
library(rpart)
library(caret)
library(pROC)
library(ROCR)
library(ggplot2)
library(rpart.plot)
#Import and clean data
setwd("~/Desktop/personal_git/dataSci450/assignment1")
wineData <- as.data.frame(read.csv("RedWhiteWine.csv"))
wineDataClean <- na.omit(wineData)
indexes = sample(1:nrow(wineDataClean), size=0.2*nrow(wineDataClean))
wineTest <- wineDataClean[indexes,]
wineTrain <- wineDataClean[-indexes,]
#Create the formula for our model
wineDataColumns <- colnames(wineDataClean)
wineDataColumns <- as.vector(wineDataColumns[-(13)])
fit_formula <- paste(wineDataColumns,collapse = " + ")
fit_formula <- paste("Class ~ ", fit_formula)
#Create the fit model
wine_fit <- rpart(fit_formula, method = "class", data=wineTrain)
predictions <- predict(wine_fit, wineTest[, colnames(wineDataClean)], type="class")
head(predictions)
#printcp(wine_fit)
confusionTest <- table(predictions, wineTest$Class)
confusionMatrix(confusionTest)
#AUC of sub categories
sub_categories <- c("alcohol", "residual.sugar", "pH", "chlorides", "citric.acid")
sub_fit <- paste(sub_categories, collapse = " + ")
sub_fit_formula <- paste("Class ~ ", sub_fit)
wine_sub_fit <- rpart(sub_fit_formula, method = "class", data=wineTrain)
sub_predictions <- predict(wine_sub_fit, wineTest[, colnames(wineDataClean)], type="class")
subConfusionTest <- table(sub_predictions, wineTest$Class)
confusionMatrix(subConfusionTest)
sub_predict_obj <- prediction(c(sub_predictions), wineTest$Class)
auc <- performance(sub_predict_obj, 'auc')
#Visualize decision tree
rpart.plot(wine_sub_fit)
wine_matrix <- model.matrix(Class ~ ., data = wineDataClean)
pca_wine <- prcomp(wine_matrix)
pca_data <- pca_wine$x[,1:8]
pca_data$Class <- wineDataClean$Class
pca_data <- pca_wine$x[,1:8]
pca_data <- as.data.frame(pca_wine$x[,1:8])
pca_data$Class <- wineDataClean$Class
indexes = sample(1:nrow(pca_data), size=0.2*nrow(pca_data))
expandedWineTest <- pca_data[indexes,]
expandedWineTrain <- pca_data[-indexes,]
wineDataColumns <- colnames(pca_data)
wineDataColumns <- as.vector(wineDataColumns[-(13)])
fit_formula <- paste(wineDataColumns,collapse = " + ")
fit_formula <- paste("Class ~ ", fit_formula)
wine_pc_fit <- rpart(fit_formula, method = "class", data=expandedWineTrain)
expandedPredictions <- predict(wine_fit, wineTest[, colnames(wineDataClean)], type="class")
confusionTest <- table(expandedPredictions, expandedWineTest$Class)
confusionMatrix(confusionTest)
prune_wne <- prune(wine_fit, .05)
summary(prune_wine)
prune_wine <- prune(wine_fit, .05)
summary(prune_wine)
?prune
prune_wne <- prune(wine_fit, .1)
prune_wne <- prune(wine_fit, .1)
predictions <- predict(wine_fit, wineTest[, colnames(wineDataClean)], type="class")
confusionTest <- table(predictions, wineTest$Class)
confusionMatrix(confusionTest)
prune_wne <- prune(wine_fit, .001)
predictions <- predict(wine_fit, wineTest[, colnames(wineDataClean)], type="class")
confusionTest <- table(predictions, wineTest$Class)
confusionMatrix(confusionTest)
rpart.plot(prune_wne)
pca_data <- as.data.frame(pca_wine$x[,1:8])
prune_wne <- prune(wine_fit, .00001)
rpart.plot(prune_wne)
save.image("~/Desktop/personal_git/dataSci450/assignment1/RDATA_assignment1_sRobinson.RData")
